{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText3",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(ARREST_KEY = ERROR_FUNCTION(''),",
				"          ARREST_DATE = ERROR_FUNCTION(''),",
				"          PD_CD = ERROR_FUNCTION(''),",
				"          PD_DESC = ERROR_FUNCTION(''),",
				"          KY_CD = ERROR_FUNCTION(''),",
				"          OFNS_DESC = ERROR_FUNCTION(''),",
				"          LAW_CODE = ERROR_FUNCTION(''),",
				"          LAW_CAT_CD = ERROR_FUNCTION(''),",
				"          ARREST_BORO = ERROR_FUNCTION(''),",
				"          ARREST_PRECINCT = ERROR_FUNCTION(''),",
				"          JURISDICTION_CODE = ERROR_FUNCTION(''),",
				"          AGE_GROUP = ERROR_FUNCTION(''),",
				"          PERP_SEX = ERROR_FUNCTION(''),",
				"          PERP_RACE = ERROR_FUNCTION(''),",
				"          X_COORD_CD = ERROR_FUNCTION(''),",
				"          Y_COORD_CD = ERROR_FUNCTION(''),",
				"          LONGITUDE = ERROR_FUNCTION(''),",
				"          NEW_GEOREFERENCED_COLUMN = ERROR_FUNCTION('')) ~> derivedColumn1",
				"derivedColumn1 select(skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true) ~> sink1"
			]
		}
	}
}